/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package diagsys;


import static diagsys.Main.conn;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author AJIBOLA
 */
public class Diagnosis extends javax.swing.JFrame {

   
    Connection con=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    Statement stmt =null ;
    String gender="";
    String typ = "Typhoid Fever";
    String mal = "Malaria";
    String gast = "Gastroenteritis";
    JCheckBox box;
    
    public Diagnosis() {
        initComponents();
           StdTable();
        DiagResultlbl.setVisible(false);   
        jPanel6.setVisible(false);
        
        IDField.setVisible(false);
        btnMale.setSelected(true);
       
        DateconTB.setVisible(false);
         jPanel2.setBackground(Color.decode("#C0C0C0"));
         jPanel7.setBackground(Color.decode("#C0C0C0"));
         
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        IDField = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        btnFemale = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        DateconTB = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        PRtable = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnMale = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtdocnurse = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        DocNurseTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jtxtAreasymptom = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        btnModify = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        txtpHistory = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtdprescription = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Finaldiag = new javax.swing.JLabel();
        DiagResultlbl = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        prescripArea = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        readmorelbl = new javax.swing.JLabel();
        Symp = new javax.swing.JPanel();
        Jpanell = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        Ap1 = new javax.swing.JCheckBox();
        Cugh = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        Hdh = new javax.swing.JCheckBox();
        Fat = new javax.swing.JCheckBox();
        Vom = new javax.swing.JCheckBox();
        Drr = new javax.swing.JCheckBox();
        Ap = new javax.swing.JCheckBox();
        Jp = new javax.swing.JCheckBox();
        Fvr = new javax.swing.JCheckBox();
        Weak = new javax.swing.JCheckBox();
        Nsa = new javax.swing.JCheckBox();
        Con = new javax.swing.JCheckBox();
        Jp1 = new javax.swing.JCheckBox();
        Mp = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        Vom1 = new javax.swing.JCheckBox();
        Cugh1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Diagnose Patient");
        setResizable(false);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtName.setFont(new java.awt.Font("Palatino Linotype", 0, 12)); // NOI18N

        btnFemale.setFont(new java.awt.Font("Palatino Linotype", 3, 12)); // NOI18N
        btnFemale.setText("Female");
        btnFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFemaleActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        jLabel4.setText("Gender");

        jLabel5.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        jLabel5.setText("Diagnosis Result");

        jLabel6.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        jLabel6.setText("Diagnosis Date");

        txtAge.setFont(new java.awt.Font("Palatino Linotype", 0, 12)); // NOI18N
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAgeKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        jLabel7.setText("Age");

        jXDatePicker1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePicker1ActionPerformed(evt);
            }
        });

        PRtable.setText("jButton2");
        PRtable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PRtableActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        jLabel3.setText("Name");

        btnMale.setFont(new java.awt.Font("Palatino Linotype", 3, 12)); // NOI18N
        btnMale.setText("Male");
        btnMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaleActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        jLabel8.setText("Drug Prescription");

        jLabel9.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        jLabel9.setText("Doctor/Nurse Name");

        txtdocnurse.setEditable(false);
        txtdocnurse.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        txtdocnurse.setEnabled(false);

        DocNurseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        DocNurseTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        DocNurseTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DocNurseTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(DocNurseTable);

        jLabel10.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        jLabel10.setText("Symptoms");

        jtxtAreasymptom.setColumns(20);
        jtxtAreasymptom.setRows(5);
        jScrollPane6.setViewportView(jtxtAreasymptom);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnModify.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        btnModify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/diagsys/s3#.jpg"))); // NOI18N
        btnModify.setText("Modify");
        btnModify.setEnabled(false);
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/diagsys/s1#.jpg"))); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/diagsys/s2#.jpg"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/diagsys/s4#.jpg"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnModify, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModify)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtpHistory.setForeground(new java.awt.Color(255, 51, 51));

        txtdprescription.setColumns(20);
        txtdprescription.setRows(5);
        jScrollPane2.setViewportView(txtdprescription);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Capture.PNG"))); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(btnMale, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IDField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                                    .addComponent(txtAge))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PRtable, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(DateconTB, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtpHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtdocnurse))
                                .addGap(56, 56, 56))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(jXDatePicker1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(20, 20, 20))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(PRtable, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(btnMale)
                            .addComponent(btnFemale)
                            .addComponent(IDField, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(DateconTB)
                            .addComponent(jLabel6)
                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txtpHistory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtdocnurse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Patient Information", jPanel1);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), " Diagnosis and Presscription", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Palatino Linotype", 3, 14))); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Palatino Linotype", 3, 14)); // NOI18N
        jLabel2.setText("Your Diagnosis Result Is");

        Finaldiag.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        Finaldiag.setForeground(new java.awt.Color(255, 51, 51));

        DiagResultlbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        prescripArea.setEditable(false);
        prescripArea.setBackground(new java.awt.Color(204, 204, 204));
        prescripArea.setColumns(20);
        prescripArea.setRows(5);
        prescripArea.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane4.setViewportView(prescripArea);

        jLabel12.setFont(new java.awt.Font("Palatino Linotype", 3, 14)); // NOI18N
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/11.png"))); // NOI18N
        jLabel12.setText("Prescription");
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel12MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel12MouseExited(evt);
            }
        });

        readmorelbl.setFont(new java.awt.Font("Palatino Linotype", 0, 12)); // NOI18N
        readmorelbl.setText("Click to read about  your diagnosis");
        readmorelbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                readmorelblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                readmorelblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                readmorelblMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                readmorelblMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Finaldiag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(121, Short.MAX_VALUE))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jLabel12)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(DiagResultlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(readmorelbl)
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Finaldiag, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(10, 10, 10)
                .addComponent(DiagResultlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(readmorelbl)
                .addGap(48, 48, 48))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 239, Short.MAX_VALUE)
                .addContainerGap())
        );

        Symp.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Symptoms", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Palatino Linotype", 3, 14))); // NOI18N

        Jpanell.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/diagsys/s4#.jpg"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        Ap1.setText("Lack of appetite");

        Cugh.setText("Cough");

        jButton3.setBackground(new java.awt.Color(255, 204, 204));
        jButton3.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(51, 51, 51));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/diagsys/stethoscope.png"))); // NOI18N
        jButton3.setText("Diagnose");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        Hdh.setText("Headache");

        Fat.setText("Fatigue/Tiredness");

        Vom.setText("Vomiting");

        Drr.setText("Diarrhea");

        Ap.setText("Abdominal Pain");

        Jp.setText("Joint Pain");

        Fvr.setText("Fever");

        Weak.setText("Weakness");

        Nsa.setText("Nausea");

        Con.setText("Constipation");

        Jp1.setText("Weight Loss");

        Mp.setText("Muscle Pain");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/diagsys/consol.jpg"))); // NOI18N

        Vom1.setText("Sweating");

        Cugh1.setText("Cold");

        javax.swing.GroupLayout JpanellLayout = new javax.swing.GroupLayout(Jpanell);
        Jpanell.setLayout(JpanellLayout);
        JpanellLayout.setHorizontalGroup(
            JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpanellLayout.createSequentialGroup()
                .addGroup(JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JpanellLayout.createSequentialGroup()
                        .addGroup(JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Ap1)
                            .addComponent(Weak)
                            .addComponent(Fvr)
                            .addComponent(Fat))
                        .addGap(19, 19, 19)
                        .addGroup(JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Con)
                            .addComponent(Ap)
                            .addComponent(Jp1)
                            .addComponent(Mp)))
                    .addGroup(JpanellLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)))
                .addGap(19, 19, 19)
                .addGroup(JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JpanellLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Drr)
                        .addGap(27, 27, 27)
                        .addComponent(Nsa)
                        .addGap(505, 505, 505))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JpanellLayout.createSequentialGroup()
                        .addGroup(JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JpanellLayout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JpanellLayout.createSequentialGroup()
                                .addComponent(Hdh)
                                .addGap(18, 18, 18)
                                .addComponent(Cugh1))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JpanellLayout.createSequentialGroup()
                                .addGroup(JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Vom)
                                    .addComponent(Vom1))
                                .addGap(24, 24, 24)
                                .addGroup(JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Jp)
                                    .addComponent(Cugh))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        JpanellLayout.setVerticalGroup(
            JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpanellLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JpanellLayout.createSequentialGroup()
                        .addGroup(JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Hdh)
                            .addComponent(Cugh1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Drr)
                            .addComponent(Nsa))
                        .addGap(12, 12, 12)
                        .addGroup(JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Vom)
                            .addComponent(Cugh))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Jp)
                            .addComponent(Vom1))
                        .addGap(24, 24, 24))
                    .addGroup(JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(JpanellLayout.createSequentialGroup()
                            .addComponent(Fvr)
                            .addGap(43, 43, 43)
                            .addComponent(Ap1)
                            .addGap(12, 12, 12)
                            .addComponent(Weak))
                        .addGroup(JpanellLayout.createSequentialGroup()
                            .addComponent(Con)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Fat)
                                .addComponent(Mp))
                            .addGap(12, 12, 12)
                            .addComponent(Ap)
                            .addGap(12, 12, 12)
                            .addComponent(Jp1))))
                .addContainerGap())
            .addGroup(JpanellLayout.createSequentialGroup()
                .addGroup(JpanellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JpanellLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JpanellLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jButton2)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout SympLayout = new javax.swing.GroupLayout(Symp);
        Symp.setLayout(SympLayout);
        SympLayout.setHorizontalGroup(
            SympLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SympLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Jpanell, javax.swing.GroupLayout.PREFERRED_SIZE, 465, Short.MAX_VALUE)
                .addContainerGap())
        );
        SympLayout.setVerticalGroup(
            SympLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SympLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Jpanell, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Symp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Symp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        jTabbedPane1.addTab("Diagnosis", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFemaleActionPerformed
        // TODO add your handling code here:
        btnMale.setSelected(false);
    }//GEN-LAST:event_btnFemaleActionPerformed

    private void txtAgeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyTyped
        // TODO add your handling code here:
        char f = evt.getKeyChar();
        if(!(Character.isDigit(f)) || (evt.getKeyCode() == KeyEvent.VK_SPACE  )){

            evt.consume();
        }
    }//GEN-LAST:event_txtAgeKeyTyped

    private void jXDatePicker1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker1ActionPerformed
        // TODO add your handling code here:'
        SimpleDateFormat sdf = new SimpleDateFormat("M/d/yyyy");
        String s = sdf.format(jXDatePicker1.getDate());
        DateconTB.setText(s);
    }//GEN-LAST:event_jXDatePicker1ActionPerformed

    private void PRtableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PRtableActionPerformed

        try {

            this.dispose();
            PatientRecord g = new PatientRecord(null, true);
            g.setVisible(true);

        }catch (ClassNotFoundException | IOException | InstantiationException | IllegalAccessException | SQLException ex) {
            JOptionPane.showMessageDialog(this,ex);
        }
    }//GEN-LAST:event_PRtableActionPerformed

    private void btnMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaleActionPerformed
        // TODO add your handling code here:
        btnFemale.setSelected(false);
    }//GEN-LAST:event_btnMaleActionPerformed

    private void DocNurseTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DocNurseTableMouseClicked
        // TODO add your handling code here:
        try {

            int row = DocNurseTable.getSelectedRow();
            String ct = ( DocNurseTable.getModel().getValueAt(row, 0).toString());

            String p ="select DNName from DocNurse where DNName = '"+ct+"' ";
            pst = con.prepareStatement(p);
            rs = pst.executeQuery();

            while(rs.next()){
                String docnurse = rs.getString("DNName");
                txtdocnurse.setText(docnurse);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,ex);
        }finally{
            if (con!=null){
                try {
                    rs.close();
                    pst.close();

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this,ex.getMessage());
                }}
            }
    }//GEN-LAST:event_DocNurseTableMouseClicked

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        // TODO add your handling code here:
        try{
            if (IDField.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "patient ID needed to modify!!","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (txtName.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Please enter patient name","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (txtAge.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Please enter patient age","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (DateconTB.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Please choose date","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (btnMale.isSelected()) {
                gender = "Male";

            }else
            if (btnFemale.isSelected()) {
                gender = "Female";
            }

                con = SqlConnect.conDB();

            String add = "update PatientInfo set Name=?,Gender=?,Age=?,Diagnosis_Date=?,Diagnosis_Result=?,Drug_Prescription=?,Doctor_Nurse=?,Symptoms=? where ID='"+IDField.getText()+"' ";
            pst = con.prepareStatement(add);

            pst.setString(1, txtName.getText().trim());
            pst.setString(2, gender);
            pst.setString(3, txtAge.getText().trim());
            pst.setString(4, DateconTB.getText().trim());
            pst.setString(5, txtpHistory.getText());
            pst.setString(6, txtdprescription.getText());
            pst.setString(7, txtdocnurse.getText());
            pst.setString(8, jtxtAreasymptom.getText());
            pst.execute();

            JOptionPane.showMessageDialog(null, "Successfully Modified");

            IDField.setText("");
            txtName.setText("");
            txtAge.setText("");
            txtpHistory.setText("");
            txtdocnurse.setText("");
            txtdprescription.setText("");
            jtxtAreasymptom.setText("");
            txtName.requestFocus();

            btnSave.setEnabled(true);
            btnModify.setEnabled(false);
            btnDelete.setEnabled(false);

        } catch (SQLException | ClassNotFoundException  |IOException | InstantiationException | IllegalAccessException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }finally{
            if (con!=null){
                try {
                    rs.close();
                    pst.close();

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this,ex.getMessage());
                }}
            }
    }//GEN-LAST:event_btnModifyActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        try{
            if (txtName.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Please enter patient name","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (txtAge.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Please enter patient age","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (DateconTB.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Please choose date","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (btnMale.isSelected()) {
                gender = "Male";

            }else
            if (btnFemale.isSelected()) {
                gender = "Female";
            }
                con=SqlConnect.conDB();

            String sql= "insert into PatientInfo(Name,Gender,Age,Diagnosis_Result,Diagnosis_Date,Drug_Prescription,Doctor_Nurse,Symptoms)values('" + txtName.getText() + "','" + gender + "','" + txtAge.getText() + "','" + txtpHistory.getText() + "','" + DateconTB.getText() + "','" + txtdprescription.getText() + "','" + txtdocnurse.getText() + "','" + jtxtAreasymptom.getText() + "')";
            pst=con.prepareStatement(sql);
            pst.execute();

            JOptionPane.showMessageDialog(this,"Successfully Saved","User",JOptionPane.INFORMATION_MESSAGE);
            txtName.setText("");
            txtAge.setText("");
            txtpHistory.setText("");
            txtdprescription.setText("");
            txtdocnurse.setText("");
            jtxtAreasymptom.setText("");
            txtName.requestFocus();
        } catch (SQLException | ClassNotFoundException  |IOException | InstantiationException | IllegalAccessException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }finally{
            if (con!=null){
                try {
                    rs.close();
                    pst.close();

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this,ex.getMessage());
                }}
            }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try{
            if (IDField.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "No patient to delete!!","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            con=SqlConnect.conDB();

            String sql= "delete from PatientInfo where ID='"+IDField.getText()+"' ";
            pst=con.prepareStatement(sql);
            pst.execute();

            JOptionPane.showMessageDialog(this,"Successfully Deleted","User",JOptionPane.INFORMATION_MESSAGE);
            txtName.setText("");
            txtAge.setText("");
            txtpHistory.setText("");
            txtdprescription.setText("");
            jtxtAreasymptom.setText("");
            txtName.requestFocus();
            btnSave.setEnabled(true);
            btnModify.setEnabled(false);
            btnDelete.setEnabled(false);
        } catch (SQLException | ClassNotFoundException  |IOException | InstantiationException | IllegalAccessException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }finally{
            if (con!=null){
                try {
                    rs.close();
                    pst.close();

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this,ex.getMessage());
                }}
            }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtName.setText("");
        txtAge.setText("");
        txtpHistory.setText("");
        txtdprescription.setText("");
        btnSave.setEnabled(true);
        txtdocnurse.setText("");
        jtxtAreasymptom.setText("");
        txtName.requestFocus();
        btnModify.setEnabled(false);
        btnDelete.setEnabled(false);

    }//GEN-LAST:event_btnClearActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
      Finaldiag.setText("");
       jtxtAreasymptom.setText("");
        jButton3.setEnabled(true);
         jPanel6.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         Component[] comps = Jpanell.getComponents();

        for (Component comp : comps) {

            if (comp instanceof JCheckBox) {
                box = (JCheckBox) comp;

                if (box.isSelected()) {

                   jButton3.setEnabled(false);
                    List<String> list = new ArrayList<>();
                    String boxvalues = box.getText();
                     jtxtAreasymptom.append(boxvalues+"\n");
                    list.add(boxvalues);

                  //  System.err.println(list);
                    HashMap<String, String> hash = new HashMap<>();

                    for (String list1 : list) {
                        hash.put(list1, list1);
                        //System.out.println(hash);
                    }
                    if ( hash.containsKey("Vomiting") || hash.containsKey("Fever") ) {

                        try {
                            Diagresult(mal);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }  if ( hash.containsKey("Vomiting") ) {

                        try {
                            Diagresult(gast);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } if ( hash.containsKey("Fever") ) {

                        try {
                            Diagresult(mal);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }  if ( hash.containsKey("Fever") ) {

                        try {
                            Diagresult(gast);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }  if ( hash.containsKey("Fever") ) {

                        try {
                            Diagresult(typ);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } if ( hash.containsKey("Headache") ) {

                        try {
                            Diagresult(mal);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } if ( hash.containsKey("Headache") ) {

                        try {
                            Diagresult(typ);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } if ( hash.containsKey("Muscle Pain") ) {

                        try {
                            Diagresult(mal);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }  if ( hash.containsKey("Cold") ) {

                        try {
                            Diagresult(typ);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }  if ( hash.containsKey("Cold") ) {

                        try {
                            Diagresult(mal);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }  if ( hash.containsKey("Diarrhea") ) {

                        try {
                            Diagresult(mal);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } if ( hash.containsKey("Diarrhea") ) {

                        try {
                            Diagresult(gast);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }if ( hash.containsKey("Diarrhea") ) {

                        try {
                            Diagresult(typ);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } if ( hash.containsKey("Weakness") ) {

                        try {
                            Diagresult(mal);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } if ( hash.containsKey("Joint Pain") ) {

                        try {
                            Diagresult(mal);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } if ( hash.containsKey("Nausea") ) {

                        try {
                            Diagresult(mal);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } if ( hash.containsKey("Sweating") ) {

                        try {
                            Diagresult(mal);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } if ( hash.containsKey("Nausea") ) {

                        try {
                            Diagresult(gast);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                    if ( hash.containsKey("Lack of appetite") ) {

                        try {
                            Diagresult(typ);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } if ( hash.containsKey("Cough") ) {

                        try {
                            Diagresult(typ);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } if ( hash.containsKey("Abdominal Pain") ) {

                        try {
                            Diagresult(typ);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } if ( hash.containsKey("Fatigue/Tiredness") ) {

                        try {
                            Diagresult(typ);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } if ( hash.containsKey("Constipation") ) {

                        try {
                            Diagresult(typ);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }  if ( hash.containsKey("Weight Loss") ) {

                        try {
                            Diagresult(typ);
                            Progress();
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jLabel12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseEntered
        // TODO add your handling code here:
        prescripArea.setVisible(true);
        jLabel12.setIcon(new ImageIcon("src/pres.png"));
    }//GEN-LAST:event_jLabel12MouseEntered

    private void jLabel12MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseExited
        // TODO add your handling code here:
         prescripArea.setVisible(false);
         jLabel12.setIcon(new ImageIcon("src/11.png"));
    }//GEN-LAST:event_jLabel12MouseExited

    private void readmorelblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_readmorelblMouseClicked
        try{
        
              
            conn = SqlConnect.conDB();
               Statement st = conn.createStatement();
        rs = st.executeQuery("select UserName from users where UserName ='"+Main.userlbl.getText()+"' ");
        if (rs.next()){
                                        
         this.dispose();
               Knowledge Knowledge = new Knowledge(null, true);    
                Knowledge.Malabtupdate.setVisible(false);
                 Knowledge.Malpreupdate.setVisible(false);
                  Knowledge.Maldrugupdate.setVisible(false);
                   Knowledge.Gasabtupdate.setVisible(false);
                    Knowledge.Gaspreupdate.setVisible(false);
                     Knowledge.Gasdrugupdate.setVisible(false);
                      Knowledge.Tyabtupdate.setVisible(false);
                       Knowledge.Typreupdate.setVisible(false);
                        Knowledge.Tydrugupdate.setVisible(false);
                      Knowledge.jTextPaneTA.setEditable(false);
                     Knowledge.jTextPaneTP.setEditable(false);
                    Knowledge.jTextPaneTD.setEditable(false);
                   Knowledge.jTextPaneMA.setEditable(false);
                  Knowledge.jTextPaneMP.setEditable(false);
                 Knowledge.jTextPaneMD.setEditable(false);
                Knowledge.jTextPaneGA.setEditable(false);
               Knowledge.jTextPaneGP.setEditable(false);
              Knowledge.jTextPaneGD.setEditable(false);           
             Knowledge.setVisible(true);
               
        }else{ 
             this.dispose();
            Knowledge Knowledge = new Knowledge(null, true); 
                         Knowledge.setVisible(true);}
                        
      
        }catch (InstantiationException | IllegalAccessException  | SQLException |IOException | ClassNotFoundException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
            
    }//GEN-LAST:event_readmorelblMouseClicked

    private void readmorelblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_readmorelblMouseEntered
        // TODO add your handling code here:
        readmorelbl.setCursor(new Cursor(Cursor.HAND_CURSOR));
        readmorelbl.setForeground(Color.blue);
    }//GEN-LAST:event_readmorelblMouseEntered

    private void readmorelblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_readmorelblMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_readmorelblMousePressed

    private void readmorelblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_readmorelblMouseExited
        // TODO add your handling code here:
         readmorelbl.setForeground(Color.black);
    }//GEN-LAST:event_readmorelblMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Diagnosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Diagnosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Diagnosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Diagnosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Diagnosis().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Ap;
    private javax.swing.JCheckBox Ap1;
    private javax.swing.JCheckBox Con;
    private javax.swing.JCheckBox Cugh;
    private javax.swing.JCheckBox Cugh1;
    public static javax.swing.JTextField DateconTB;
    private javax.swing.JLabel DiagResultlbl;
    private javax.swing.JTable DocNurseTable;
    private javax.swing.JCheckBox Drr;
    private javax.swing.JCheckBox Fat;
    private javax.swing.JLabel Finaldiag;
    private javax.swing.JCheckBox Fvr;
    private javax.swing.JCheckBox Hdh;
    public static javax.swing.JTextField IDField;
    private javax.swing.JCheckBox Jp;
    private javax.swing.JCheckBox Jp1;
    private javax.swing.JPanel Jpanell;
    private javax.swing.JCheckBox Mp;
    private javax.swing.JCheckBox Nsa;
    public static javax.swing.JButton PRtable;
    private javax.swing.JPanel Symp;
    private javax.swing.JCheckBox Vom;
    private javax.swing.JCheckBox Vom1;
    private javax.swing.JCheckBox Weak;
    private javax.swing.JButton btnClear;
    public static javax.swing.JButton btnDelete;
    public static javax.swing.JRadioButton btnFemale;
    public static javax.swing.JRadioButton btnMale;
    public static javax.swing.JButton btnModify;
    public javax.swing.JButton btnSave;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    public static org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    public static javax.swing.JTextArea jtxtAreasymptom;
    private javax.swing.JTextArea prescripArea;
    private javax.swing.JLabel readmorelbl;
    public static javax.swing.JTextField txtAge;
    public static javax.swing.JTextField txtName;
    public static javax.swing.JTextField txtdocnurse;
    public static javax.swing.JTextArea txtdprescription;
    public static javax.swing.JTextField txtpHistory;
    // End of variables declaration//GEN-END:variables

 public void Progress() throws InterruptedException {

        final JDialog g = new JDialog(this, false);
        g.setUndecorated(true);
        g.setSize(180, 46);
        ImageIcon icon = new ImageIcon("src/wait.gif");
        g.add(new JLabel(" Diagnosis in progress...", icon, JLabel.CENTER));
        g.setLocationRelativeTo(null);

        SwingWorker<String, Void> worker = new SwingWorker<String, Void>() {
            @Override
            protected String doInBackground() throws Exception {
              Thread.sleep(3000);
                
                 jPanel6.setVisible(true);
                 prescripArea.setVisible(false);
                 Finaldiag.setText(DiagResultlbl.getText());
                   jButton3.setEnabled(true);
                return null;
            }

            @Override
            protected void done() {

                g.dispose();
            }

        };
        worker.execute();
       
              g.setVisible(true);

    }
 
 
 public final void StdTable() {
        try {
            //Class.forName("com.mysql.jdbc.Driver");

          con = SqlConnect.conDB();
            String p ="select DNName from DocNurse ";
                   pst = con.prepareStatement(p);
                    rs = pst.executeQuery();          
                     DocNurseTable.setModel(DbUtils.resultSetToTableModel(rs));
             
                     rs.close();
                     pst.close();
        } catch (SQLException | ClassNotFoundException | IOException | InstantiationException| IllegalAccessException ex) {
            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
        }
                    
          }
 
 public final void Diagresult(String diseaseName) {
        try {
 
          con = SqlConnect.conDB();
            String p ="select disease,prescription from Base where disease= '"+diseaseName+"' ";
                   pst = con.prepareStatement(p);
                    rs = pst.executeQuery();          
                     while(rs.next()){
                String disease = rs.getString("disease");
                String prescription = rs.getString("prescription");
                DiagResultlbl.setText(disease);
                prescripArea.setText(prescription);
            }
             
                     rs.close();
                     pst.close();
        } catch (SQLException | ClassNotFoundException | IOException | InstantiationException| IllegalAccessException ex) {
            Logger.getLogger(Diagnosis.class.getName()).log(Level.SEVERE, null, ex);
        }
                    
          }

}
