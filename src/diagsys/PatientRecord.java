/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package diagsys;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Mr Olayinka
 */
public class PatientRecord extends javax.swing.JDialog {
 ResultSet rs=null ;
     Connection conn = null;
      PreparedStatement pst = null;
       String ID,Name,Gender,Age,Diagnosis_Result,Date,Prescription,Doctor_Nurse,  Symptoms ;
    /**
     * Creates new form NewJDialog
     *  @param parent
     * @param modal
     */
    public PatientRecord(java.awt.Frame parent, boolean modal) throws ClassNotFoundException, IOException, InstantiationException, IllegalAccessException, SQLException {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        StdTable() ;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Patienttable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Patients Record");

        Patienttable.setFont(new java.awt.Font("Palatino Linotype", 1, 12)); // NOI18N
        Patienttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Patienttable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Patienttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PatienttableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Patienttable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PatienttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PatienttableMouseClicked
        try {

            int row = Patienttable.getSelectedRow();
            String ct = ( Patienttable.getModel().getValueAt(row, 0).toString());

            String p ="select * from PatientInfo where ID = '"+ct+"' ";
            pst = conn.prepareStatement(p);
            rs = pst.executeQuery();

            while(rs.next()){
                ID = rs.getString("ID");
                Name = rs.getString("Name");
                Gender = rs.getString("Gender");
                Age = rs.getString("Age");
                Diagnosis_Result = rs.getString("Diagnosis_Result");
                Date = rs.getString("Diagnosis_Date");
                Prescription = rs.getString("Drug_Prescription");
                Doctor_Nurse= rs.getString("Doctor_Nurse");
                Symptoms = rs.getString("Symptoms");
            }
           
            
            
            this.dispose();
          Diagnosis j = new Diagnosis();
            if (Gender.equalsIgnoreCase("male") ) {
                j.btnMale.setSelected(true);
                 j.btnFemale.setSelected(false);
              }else
            if (Gender.equalsIgnoreCase("female")) {
               j.btnFemale.setSelected(true);
                j.btnMale.setSelected(false);
            }

          j.btnSave.setEnabled(false);
          j.btnModify.setEnabled(true);
           j.btnDelete.setEnabled(true);

           j.IDField.setText(ID);
            j.txtName.setText(Name);
             j.txtAge.setText(Age);
              j.txtpHistory.setText(Diagnosis_Result);
               j. DateconTB.setText(Date);
                j. txtdprescription.setText(Prescription);
                 j.txtdocnurse.setText(Doctor_Nurse);
                  j.jtxtAreasymptom.setText(Symptoms);
            
         String date = j. DateconTB.getText();
            Date s = new Date(date);
             j.jXDatePicker1.setDate(s);
              j.setVisible(true);
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,ex);
        }finally{
            if (conn!=null){
                try {
                     rs.close();
                        pst.close();
                            conn.close();
                        
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this,ex.getMessage());
                }}
            }

    }//GEN-LAST:event_PatienttableMouseClicked

    public final void StdTable() throws SQLException, ClassNotFoundException, IOException, InstantiationException, IllegalAccessException{
        //Class.forName("com.mysql.jdbc.Driver");
          
           conn = SqlConnect.conDB();
                    String p ="select ID,Name,Gender,Age,Diagnosis_Result,Drug_Prescription,Diagnosis_Date,Symptoms from PatientInfo ";
                     pst = conn.prepareStatement(p);
                    rs = pst.executeQuery();          
                        Patienttable.setModel(DbUtils.resultSetToTableModel(rs));
             
                        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    PatientRecord dialog = new PatientRecord(new javax.swing.JFrame(), true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (ClassNotFoundException | IOException | InstantiationException | IllegalAccessException | SQLException ex) {
                    Logger.getLogger(PatientRecord.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable Patienttable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
